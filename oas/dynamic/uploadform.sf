## begin license ##
# 
# "Open Annotation Service" enables exchange, storage and search of
# heterogeneous annotations using a uniform format (Open Annotation format) and
# a uniform web service interface. 
# 
# Copyright (C) 2012 Meertens Instituut (KNAW) http://meertens.knaw.nl
# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
# 
# This file is part of "Open Annotation Service"
# 
# "Open Annotation Service" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# "Open Annotation Service" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with "Open Annotation Service"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 
## end license ##

import page

def main(Body, **kwargs):
    params = parse_qs(Body)

    yield page.header(**kwargs)
    yield page.caption("Open Annotation Service")
    yield page.menu(selected="Upload")

    annotation = ''
    if 'annotation' in params and params['annotation'][0].strip() != '':
        annotation = params['annotation'][0].strip()

    apiKey = ''
    if 'apiKey' in params and params['apiKey'][0].strip() != '':
        apiKey = params['apiKey'][0].strip()

    if annotation:
        try:
            __callstack_var_authorization__ = {'apiKey': apiKey }
            lxmlNode = parse(StringIO(annotation))
            yield observable.all.add(identifier='ignored', partname="rdf", lxmlNode=lxmlNode)
            annotation = ''
            yield "<p class='upload-success'>Upload successful.</p>"
        except Exception, e:
            yield "<p class='upload-error'>%s</p>" % str(e)


    yield '<p>Annotations can be POSTed as RDF+XML via SRU Update, see the <a href="/public/example_client.py">example client</a>.</p>'
    yield '<p>The form below is a helper for testing purposes.</p>'
    yield '<form method="POST" action="/uploadform">'
    yield '<dl><dt>Annotation in RDF+XML format. See <a href="/examples" target="_blank">examples</a>.</dt>\n'
    yield '<dd><textarea name="annotation" cols="80" rows="24">'
    yield escapeHtml(annotation) if annotation else ''
    yield '</textarea></dd>\n'
    yield '<dt>ApiKey</dt><dd><input type="text" name="apiKey" value=%s/></dd>\n' % quoteattr(apiKey)
    yield '<dd class="submit"><input type="submit" value="Upload"/></dd>\n'
    yield '</dl>'
    yield '</form>'
    yield page.footer()
